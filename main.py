from actynf.base.function_toolbox import normalize,softmax,nat_log
import numpy as np
from PIL import Image
import sys
import matplotlib.pyplot as plt

if __name__ == '__main__': 

    K = 20

    value_2 = 1.68
    print((int(K*(value_2-0.001)/2.0)))


    # exit()
    labels = [[[0.001, 0.001], [0.001, 0.201], [0.001, 0.401], [0.001, 0.6010000000000001], [0.001, 0.801], [0.001, 1.001], [0.001, 1.201], [0.001, 1.401], [0.001, 1.601], [0.001, 1.801], [0.001, 2.001], [0.001, 2.201], [0.001, 2.4010000000000002], [0.001, 2.601], [0.001, 2.801]], 
              [[0.201, 0.001], [0.201, 0.201], [0.201, 0.401], [0.201, 0.6010000000000001], [0.201, 0.801], [0.201, 1.001], [0.201, 1.201], [0.201, 1.401], [0.201, 1.601], [0.201, 1.801], [0.201, 2.001], [0.201, 2.201], [0.201, 2.4010000000000002], [0.201, 2.601], [0.201, 2.801]], 
              [[0.401, 0.001], [0.401, 0.201], [0.401, 0.401], [0.401, 0.6010000000000001], [0.401, 0.801], [0.401, 1.001], [0.401, 1.201], [0.401, 1.401], [0.401, 1.601], [0.401, 1.801], [0.401, 2.001], [0.401, 2.201], [0.401, 2.4010000000000002], [0.401, 2.601], [0.401, 2.801]], 
              [[0.6010000000000001, 0.001], [0.6010000000000001, 0.201], [0.6010000000000001, 0.401], [0.6010000000000001, 0.6010000000000001], [0.6010000000000001, 0.801], [0.6010000000000001, 1.001], [0.6010000000000001, 1.201], [0.6010000000000001, 1.401], [0.6010000000000001, 1.601], [0.6010000000000001, 1.801], [0.6010000000000001, 2.001], [0.6010000000000001, 2.201], [0.6010000000000001, 2.4010000000000002], [0.6010000000000001, 2.601], [0.6010000000000001, 2.801]], 
              [[0.801, 0.001], [0.801, 0.201], [0.801, 0.401], [0.801, 0.6010000000000001], [0.801, 0.801], [0.801, 1.001], [0.801, 1.201], [0.801, 1.401], [0.801, 1.601], [0.801, 1.801], [0.801, 2.001], [0.801, 2.201], [0.801, 2.4010000000000002], [0.801, 2.601], [0.801, 2.801]], 
              [[1.001, 0.001], [1.001, 0.201], [1.001, 0.401], [1.001, 0.6010000000000001], [1.001, 0.801], [1.001, 1.001], [1.001, 1.201], [1.001, 1.401], [1.001, 1.601], [1.001, 1.801], [1.001, 2.001], [1.001, 2.201], [1.001, 2.4010000000000002], [1.001, 2.601], [1.001, 2.801]], 
              [[1.201, 0.001], [1.201, 0.201], [1.201, 0.401], [1.201, 0.6010000000000001], [1.201, 0.801], [1.201, 1.001], [1.201, 1.201], [1.201, 1.401], [1.201, 1.601], [1.201, 1.801], [1.201, 2.001], [1.201, 2.201], [1.201, 2.4010000000000002], [1.201, 2.601], [1.201, 2.801]], 
              [[1.401, 0.001], [1.401, 0.201], [1.401, 0.401], [1.401, 0.6010000000000001], [1.401, 0.801], [1.401, 1.001], [1.401, 1.201], [1.401, 1.401], [1.401, 1.601], [1.401, 1.801], [1.401, 2.001], [1.401, 2.201], [1.401, 2.4010000000000002], [1.401, 2.601], [1.401, 2.801]], 
              [[1.601, 0.001], [1.601, 0.201], [1.601, 0.401], [1.601, 0.6010000000000001], [1.601, 0.801], [1.601, 1.001], [1.601, 1.201], [1.601, 1.401], [1.601, 1.601], [1.601, 1.801], [1.601, 2.001], [1.601, 2.201], [1.601, 2.4010000000000002], [1.601, 2.601], [1.601, 2.801]], 
              [[1.801, 0.001], [1.801, 0.201], [1.801, 0.401], [1.801, 0.6010000000000001], [1.801, 0.801], [1.801, 1.001], [1.801, 1.201], [1.801, 1.401], [1.801, 1.601], [1.801, 1.801], [1.801, 2.001], [1.801, 2.201], [1.801, 2.4010000000000002], [1.801, 2.601], [1.801, 2.801]], 
              [[2.001, 0.001], [2.001, 0.201], [2.001, 0.401], [2.001, 0.6010000000000001], [2.001, 0.801], [2.001, 1.001], [2.001, 1.201], [2.001, 1.401], [2.001, 1.601], [2.001, 1.801], [2.001, 2.001], [2.001, 2.201], [2.001, 2.4010000000000002], [2.001, 2.601], [2.001, 2.801]], 
              [[2.201, 0.001], [2.201, 0.201], [2.201, 0.401], [2.201, 0.6010000000000001], [2.201, 0.801], [2.201, 1.001], [2.201, 1.201], [2.201, 1.401], [2.201, 1.601], [2.201, 1.801], [2.201, 2.001], [2.201, 2.201], [2.201, 2.4010000000000002], [2.201, 2.601], [2.201, 2.801]], 
              [[2.4010000000000002, 0.001], [2.4010000000000002, 0.201], [2.4010000000000002, 0.401], [2.4010000000000002, 0.6010000000000001], [2.4010000000000002, 0.801], [2.4010000000000002, 1.001], [2.4010000000000002, 1.201], [2.4010000000000002, 1.401], [2.4010000000000002, 1.601], [2.4010000000000002, 1.801], [2.4010000000000002, 2.001], [2.4010000000000002, 2.201], [2.4010000000000002, 2.4010000000000002], [2.4010000000000002, 2.601], [2.4010000000000002, 2.801]], 
              [[2.601, 0.001], [2.601, 0.201], [2.601, 0.401], [2.601, 0.6010000000000001], [2.601, 0.801], [2.601, 1.001], [2.601, 1.201], [2.601, 1.401], [2.601, 1.601], [2.601, 1.801], [2.601, 2.001], [2.601, 2.201], [2.601, 2.4010000000000002], [2.601, 2.601], [2.601, 2.801]], 
              [[2.801, 0.001], [2.801, 0.201], [2.801, 0.401], [2.801, 0.6010000000000001], [2.801, 0.801], [2.801, 1.001], [2.801, 1.201], [2.801, 1.401], [2.801, 1.601], [2.801, 1.801], [2.801, 2.001], [2.801, 2.201], [2.801, 2.4010000000000002], [2.801, 2.601], [2.801, 2.801]]]

    L_nolearn = np.array([[2.7238, 2.7638, 2.7613, 2.6161, 2.5273, 1.7213, 0.6516, 0.3683, 0.6567, 0.3865, 0.3425, 0.8339, 0.7391, 0.7015, 0.6562],
                [2.6054, 2.6384, 2.6785, 2.641, 2.5143, 1.4285, 0.6465, 0.4764, 0.6743, 0.3827, 0.5223, 0.8291, 0.7857, 0.7258, 0.6277], 
                [2.2593, 2.336, 2.4907, 2.4233, 2.0822, 1.3218, 0.5316, 0.515, 0.6023, 0.2839, 0.8515, 0.7976, 0.7767, 0.6895, 0.6391],
                [1.6964, 1.6817, 1.9505, 1.8465, 1.6744, 0.7377, 0.5331, 0.6848, 0.4257, 0.2176, 0.7978, 0.7798, 0.6867, 0.6565, 0.6202], 
                [1.4816, 1.3413, 1.4402, 1.3944, 1.0358, 0.5576, 0.5672, 0.6197, 0.2989, 0.76, 0.7837, 0.7242, 0.6806, 0.6432, 0.6066], 
                [1.1208, 1.0155, 1.0944, 0.9364, 0.7547, 0.7592, 0.6294, 0.3741, 0.4184, 0.7755, 0.7494, 0.7278, 0.6857, 0.6374, 0.5665], 
                [0.8497, 0.9279, 0.8087, 0.9643, 0.7916, 0.596, 0.3886, 0.3754, 0.768, 0.7705, 0.7043, 0.6998, 0.6108, 0.594, 0.5421], 
                [0.7911, 0.795, 0.8976, 0.8042, 0.5606, 0.4835, 0.4752, 0.69, 0.8697, 0.8006, 0.7242, 0.6694, 0.6335, 0.593, 0.534], 
                [0.6837, 0.7103, 0.7515, 0.6262, 0.5922, 0.6418, 0.7627, 0.8375, 0.7938, 0.7663, 0.6953, 0.6903, 0.627, 0.5234, 0.5831], 
                [0.788, 0.7054, 0.5461, 0.6966, 0.694, 0.7392, 0.7196, 0.6305, 0.6664, 0.7184, 0.6462, 0.6389, 0.5905, 0.5967, 0.5286], 
                [0.6018, 0.6088, 0.5424, 0.6238, 0.6678, 0.6875, 0.7128, 0.6738, 0.6976, 0.6836, 0.6203, 0.6058, 0.5815, 0.5585, 0.5436], 
                [0.5734, 0.6233, 0.6468, 0.5849, 0.6005, 0.6396, 0.6371, 0.6489, 0.6792, 0.634, 0.57, 0.5724, 0.5553, 0.5571, 0.523], 
                [0.6118, 0.5608, 0.5793, 0.6263, 0.5762, 0.6694, 0.7604, 0.6273, 0.5715, 0.6061, 0.5888, 0.5501, 0.5568, 0.5097, 0.5203], 
                [0.6865, 0.5836, 0.449, 0.551, 0.6395, 0.565, 0.6301, 0.5539, 0.5808, 0.5646, 0.5695, 0.5721, 0.5385, 0.5155, 0.513], 
                [0.567, 0.5986, 0.559, 0.5644, 0.5727, 0.5254, 0.6148, 0.4825, 0.4832, 0.5587, 0.5664, 0.53, 0.4984, 0.5005, 0.5265]])
    
    L_learn = np.array([[2.7717, 2.6954, 2.7721, 2.7448, 2.6733, 1.617, 1.3594, 1.0632, 0.9901, 1.0434, 0.8763, 0.6899, 0.6216, 0.5705, 0.608],
                [2.6681, 2.6874, 2.7732, 2.7085, 2.6647, 1.5624, 1.1804, 1.0819, 0.9868, 0.9748, 0.9168, 0.7345, 0.6479, 0.6005, 0.5365],
                [2.0942, 2.2632, 2.527, 2.306, 2.159, 1.2476, 1.1529, 0.9944, 0.8545, 0.917, 0.8037, 0.7096, 0.633, 0.5966, 0.5688],
                [1.4707, 1.5305, 1.8668, 1.684, 1.3667, 1.0527, 0.965, 0.894, 0.8156, 0.8083, 0.752, 0.6838, 0.6244, 0.5665, 0.5262],
                [1.1456, 1.2012, 1.2307, 1.1994, 1.0302, 0.8932, 0.8449, 0.8255, 0.8029, 0.8122, 0.6928, 0.5897, 0.6164, 0.5612, 0.5616],
                [0.9236, 0.9421, 1.0065, 1.0364, 0.8037, 0.7634, 0.8725, 0.8173, 0.7681, 0.8302, 0.6908, 0.6486, 0.6006, 0.5809, 0.5477],
                [0.8388, 0.8453, 0.877, 0.8304, 0.9489, 0.9287, 0.8872, 0.851, 0.7724, 0.7334, 0.6646, 0.6554, 0.5869, 0.6213, 0.5505],
                [0.7416, 0.9337, 0.7628, 0.8371, 0.8459, 0.825, 0.8736, 0.8279, 0.8085, 0.7877, 0.668, 0.6811, 0.6116, 0.605, 0.5751], 
                [0.7855, 0.8058, 0.8068, 0.8523, 0.8402, 0.8824, 0.7182, 0.7726, 0.8045, 0.722, 0.6787, 0.6683, 0.6027, 0.5776, 0.5277],
                [0.6038, 0.6479, 0.7334, 0.7825, 0.6743, 0.8024, 0.7023, 0.8193, 0.6998, 0.6249, 0.6197, 0.6195, 0.5875, 0.5916, 0.5571], 
                [0.6255, 0.7369, 0.6909, 0.6837, 0.6243, 0.7265, 0.6979, 0.7403, 0.678, 0.7109, 0.6155, 0.6098, 0.5646, 0.571, 0.5268], 
                [0.6361, 0.575, 0.5524, 0.6617, 0.7098, 0.6531, 0.6202, 0.7349, 0.6561, 0.6455, 0.6212, 0.5775, 0.5876, 0.5648, 0.5494], 
                [0.6735, 0.6088, 0.632, 0.6813, 0.6671, 0.4616, 0.6538, 0.6389, 0.6928, 0.5762, 0.5586, 0.5821, 0.5405, 0.5443, 0.5311], 
                [0.6134, 0.5216, 0.6455, 0.678, 0.6284, 0.5588, 0.7166, 0.6265, 0.6236, 0.5516, 0.6519, 0.5664, 0.553, 0.5463, 0.5377], 
                [0.5243, 0.6477, 0.6792, 0.536, 0.5794, 0.5346, 0.5179, 0.5882, 0.5402, 0.5351, 0.6016, 0.5607, 0.5303, 0.4852, 0.5252]])
    
    L_learn_zoomed = [[2.7713, 2.7032, 2.7942, 2.7875, 2.7755, 2.8082, 2.8023, 2.7641, 2.7513, 2.7608, 2.7571, 2.5831, 2.4941, 2.5948, 2.4528, 2.4023, 1.799, 1.6494, 1.3852, 1.1326], 
                      [2.7706, 2.7856, 2.7586, 2.7148, 2.7869, 2.7926, 2.8069, 2.7884, 2.7394, 2.7632, 2.7262, 2.7369, 2.6752, 2.6495, 2.5054, 2.3608, 1.7708, 1.7103, 1.2377, 1.1262], 
                      [2.6942, 2.7656, 2.6816, 2.7732, 2.7985, 2.7983, 2.7783, 2.7682, 2.7693, 2.7577, 2.7372, 2.7202, 2.4388, 2.443, 2.3355, 2.1547, 1.7192, 1.5725, 1.4353, 1.3666], 
                      [2.7618, 2.7417, 2.7604, 2.7467, 2.7866, 2.7513, 2.7615, 2.756, 2.7758, 2.7206, 2.7238, 2.7133, 2.5552, 2.504, 2.4834, 2.3038, 1.6284, 1.1897, 1.4235, 1.232], 
                      [2.5776, 2.5103, 2.4511, 2.5667, 2.7283, 2.6995, 2.7189, 2.7125, 2.7259, 2.7202, 2.7069, 2.5626, 2.645, 2.3933, 1.8693, 2.0655, 1.5769, 1.3084, 1.3254, 1.2055], 
                      [2.4294, 2.3748, 2.4451, 2.4682, 2.3665, 2.5495, 2.466, 2.6137, 2.6588, 2.627, 2.5345, 2.6281, 2.5471, 2.5659, 2.3607, 1.8405, 1.3002, 1.3747, 1.286, 1.1832], 
                      [2.2416, 2.0438, 2.1888, 2.0816, 2.5301, 2.3408, 2.5089, 2.5662, 2.5372, 2.5396, 2.4854, 2.5045, 2.2164, 1.8755, 1.4229, 1.9357, 1.4738, 1.3514, 1.1403, 1.0041], 
                      [2.138, 2.0403, 1.9684, 2.0293, 2.1592, 2.3208, 2.31, 2.143, 2.3113, 2.2867, 1.961, 2.2178, 1.9756, 1.5807, 1.6313, 1.4661, 1.0121, 1.0763, 1.0508, 1.1057],
                        [1.8138, 1.7886, 1.6529, 1.8865, 2.0095, 2.117, 2.1608, 2.2033, 2.2367, 2.1606, 1.8169, 1.6132, 1.8956, 1.4562, 1.3245, 1.3914, 1.0992, 1.089, 1.0494, 0.9888], 
                        [1.7049, 1.7977, 1.6739, 1.5093, 1.6177, 1.7603, 1.8486, 1.7896, 1.6421, 1.7592, 1.743, 1.6808, 1.3915, 1.1348, 1.11, 1.2741, 1.0502, 0.9819, 0.9898, 1.0136], 
                        [1.4494, 1.6349, 1.4665, 1.2969, 1.4823, 1.6911, 1.7879, 1.6898, 1.8668, 1.5695, 1.4751, 1.3107, 1.0857, 1.1615, 0.9452, 1.1086, 1.1017, 1.0974, 0.9155, 0.9478], 
                        [1.2466, 1.1764, 1.4123, 1.4257, 1.4973, 1.5346, 1.7055, 1.646, 1.5421, 1.3542, 1.4345, 1.2968, 1.0757, 1.0564, 0.9344, 1.0698, 1.0178, 1.0053, 0.9167, 0.8962], 
                        [1.3023, 1.3143, 1.3415, 1.1445, 1.4642, 1.3992, 1.3553, 1.5111, 1.2587, 1.2683, 1.2411, 1.2726, 1.1071, 1.0033, 1.0653, 0.9106, 0.9409, 0.9218, 0.8892, 0.9194], 
                        [1.1749, 1.1441, 1.2731, 1.1551, 1.1628, 1.1911, 1.2578, 1.1106, 1.3377, 1.2096, 1.3641, 0.9021, 0.9518, 0.9907, 1.0543, 0.8502, 0.9369, 0.8323, 0.8878, 0.8861], 
                        [1.0396, 1.1199, 1.1983, 1.1752, 1.0061, 1.1658, 1.2045, 1.1727, 0.975, 1.0815, 1.0715, 1.0946, 1.0429, 0.8802, 0.8669, 0.8298, 0.9076, 0.8667, 0.8619, 0.908], 
                        [0.9373, 1.0614, 1.0709, 1.1246, 1.0151, 1.0038, 1.0457, 1.1438, 1.0906, 1.0326, 0.8391, 0.9932, 0.8627, 0.8429, 0.794, 0.8732, 0.8358, 0.8573, 0.7105, 0.8375], 
                        [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0.8419, 0.902, None, 0.8592], 
                        [0.903, 0.9718, None, None, 0.8974, 0.9723, None, None, None, None, None, None, 0.9048, 0.9364, 0.7866, 0.8506, 0.8232, 0.8899, 0.8149, 0.8119], 
                        [1.0076, 0.7939, 0.9324, 0.8558, 0.9752, 0.9287, 0.9887, 0.8438, 0.8814, 0.8756, 0.8815, 0.8928, 0.8434, 0.925, 0.8207, 0.8107, 0.8685, 0.8721, 0.7631, 0.8428], 
                        [0.8651, 0.8483, 0.8347, 1.0089, 0.8812, 0.8483, 0.849, 0.9095, 0.8498, 0.8763, 0.7959, 0.8246, 0.9137, 0.8232, 0.9505, 0.8752, 0.8208, 0.8236, 0.8196, 0.8476]]
    

    for sublist in L_nolearn_zoomed_new_version:
        for k,i in enumerate(sublist):
            if (i==None):
                sublist[k] = 0.0
    L = L_nolearn_zoomed_new_version

    L = L_b_dist
    L = np.array(L)

    # Figure 0-1.2
    N = L.shape[0]
    fig2,ax = plt.subplots(1)
    fig2.suptitle("Subject average cognitive state in the last 15 trials")
    ax.imshow(np.array(L),vmin=0,interpolation='nearest')
    # ax.imshow(np.array(L),interpolation='bilinear')
    ax.set_title("Updating feedback model")
    ax.set_ylabel("TRUE FB std")
    ax.set_xlabel("EXPECTED FB std")
    ax.invert_yaxis()
    ax.set_yticks(range(N))
    ax.set_yticklabels(np.round(np.linspace(0,2,N),1))

    ax.set_xticks(range(N))
    ax.set_xticklabels(np.round(np.linspace(0,2,N),1))
    fig2.show()

    # # Figure 0-3
    # N = len(L_nolearn)
    # fig,axes = plt.subplots(1,2)
    # fig.suptitle("Subject average cognitive state in the last 15 trials")
    # axes[0].imshow(np.array(L_nolearn),vmin=0,vmax=3.0)
    # axes[0].set_title("Not updating feedback model")
    # axes[1].imshow(np.array(L_learn),vmin=0.0,vmax=3.0)
    # axes[1].set_title("Updating feedback model")

    # for ax in axes:
    #     ax.set_ylabel("TRUE FB std")
    #     ax.set_xlabel("EXPECTED FB std")
    #     ax.invert_yaxis()
    #     ax.set_yticks(range(N))
    #     ax.set_yticklabels(np.round(np.linspace(0,3,N),1))

    #     ax.set_xticks(range(N))
    #     ax.set_xticklabels(np.round(np.linspace(0,3,N),1))
    # fig.show()

    input()